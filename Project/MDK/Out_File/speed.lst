C251 COMPILER V5.60.0,  speed                                                              05/04/25  21:33:16  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE speed
OBJECT MODULE PLACED IN .\Out_File\speed.obj
COMPILER INVOKED BY: d:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\speed.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\L
                    -ibraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\sr
                    -c) DEBUG PRINT(.\Out_File\speed.lst) OBJECT(.\Out_File\speed.obj) 

stmt  level    source

    1          #include "speed.h"
    2          #include "math.h"
    3          
    4          int16 aim_speed        = 10;  //Ä¿ï¿½ï¿½ï¿½Ù¶ï¿½  
    5          int16 real_speed       = 0;    //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ï¿½Ù¶ï¿½ 
    6          int16 left_speed       = 0;    //ï¿½ï¿½ï¿½ï¿½ï¿½Ù¶ï¿½
    7          int16 right_speed      = 0;    //ï¿½ï¿½ï¿½ï¿½ï¿½Ù¶ï¿½
    8          int16 last_speed       = 0;    
    9          int16 left_last_speed  = 0;
   10          int16 right_last_speed = 0;
   11          int16 left_real_speed  = 0;
   12          int16 right_real_speed = 0;
   13          
   14          int16 All_PWM_left     = 0;     //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½PWMï¿½ï¿½ï¿½
   15          int16 All_PWM_right    = 0;     //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½PWMï¿½ï¿½ï¿½
   16          int16 Speed_pwm_left   = 0;     //ï¿½ï¿½ï¿½ï¿½ï¿½Ù¶È»ï¿½PWMï¿½ï¿½Cï¿½ï¿½ï¿½Ã£ï¿½
   17          int16 Speed_pwm_right  = 0;     //ï¿½ï¿½ï¿½ï¿½ï¿½Ù¶È»ï¿½PWMï¿½ï¿½Cï¿½ï¿½ï¿½Ã£ï¿½
   18          int16 Last_speed_pwm_left = 0;
   19          int16 Last_speed_pwm_right = 0;
   20          int16 Real_Speed_left  = 0;     //ï¿½ï¿½ï¿½ï¿½Êµï¿½ï¿½ï¿½Ù¶ï¿½
   21          int16 Real_Speed_right = 0;     //ï¿½ï¿½ï¿½ï¿½Êµï¿½ï¿½ï¿½Ù¶ï¿½
   22          int16 Speed_pwm_all    = 0;     //ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ï¿½Ù¶È»ï¿½PWMï¿½ï¿½Dï¿½ï¿½ï¿½Ã£ï¿½
   23          int16 Steer_pwm        = 0;     //×ªï¿½ï¿½ï¿½Ú»ï¿½PWM
   24          uint16 Open_pack_time  = 0;     //ï¿½ò¿ª¸É»É¹Ü¶ï¿½Ê±
   25          uint16 Stop_time       = 0;     //Í£ï¿½ï¿½ï¿½ï¿½Ê±
   26           
   27          /******************************* ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½***********************************
   28          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  void init_PWM(unsigned char Motor_Set)
   29          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  Motor_Set---Îª0Ê±ï¿½ï¿½Ê¼ï¿½ï¿½ÎªBTNï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê½ï¿½ï¿½Îª1Ê±ï¿½ï¿½Ê¼ï¿½ï¿½DRVï
             -¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê½
   30          Ëµï¿½ï¿½ï¿½ï¿½  ï¿½ï¿½Ä¸10000
   31                              pwm_init(PWMA_CH1P_P60, 10000, 0); 
   32                  ï¿½ï¿½Ê¼ï¿½ï¿½PWM  Ê¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½P6.0  ï¿½ï¿½ï¿½PWMÆµï¿½ï¿½10000HZ  Õ¼ï¿½Õ±ï¿½Îªï¿½Ù·ï¿½Ö® 
             -pwm_duty / PWM_DUTY_MAX * 100                          
   33          ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½  
   34          *****************************************************************************/
   35          unsigned char MOTOR_MODE=0;//ï¿½Ð¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Þ¸ï¿½É¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
   36          void init_PWM(unsigned char Motor_Set)
   37          {
   38   1              MOTOR_MODE = Motor_Set;
   39   1              if (MOTOR_MODE==0) 
   40   1              {
   41   2      //-----MOSï¿½ï¿½ï¿½ï¿½-----------
   42   2          pwm_init(Left_Z_Pin,  20000,0);//ï¿½ï¿½ï¿½Ö³ï¿½Ê¼ï¿½ï¿½
   43   2                pwm_init(Left_F_Pin,  20000,0);
   44   2                pwm_init(Right_Z_Pin, 20000,0);//ï¿½ï¿½ï¿½Ö³ï¿½Ê¼ï¿½ï¿½
   45   2                pwm_init(Right_F_Pin, 20000,0);
   46   2              }
   47   1                      else
   48   1              {
   49   2      //------DRVï¿½ï¿½ï¿½ï¿½-------------
   50   2                pwm_init(Left_PWM_Pin, 20000,0);//ï¿½ï¿½ï¿½Ö³ï¿½Ê¼ï¿½ï¿½
   51   2              pwm_init(Right_PWM_Pin,20000,0);//ï¿½ï¿½ï¿½Ö³ï¿½Ê¼ï¿½ï¿½
   52   2                      gpio_mode(P6_4,GPO_PP);       // ï¿½ï¿½ï¿½ï¿½DRVï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªÎªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
   53   2                gpio_mode(P6_0,GPO_PP);       // ï¿½ï¿½ï¿½ï¿½DRVï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªÎªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
   54   2       } 
   55   1      }
C251 COMPILER V5.60.0,  speed                                                              05/04/25  21:33:16  PAGE 2   

   56          /****************************ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½****************************
   57          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  void encoder_init(void)
   58          ï¿½ï¿½ï¿½Ü£ï¿½  ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½
   59          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  ï¿½ï¿½
   60          Ëµï¿½ï¿½ï¿½ï¿½  ctimer_count_init(CTIM0_P34);
   61                  ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¹ï¿½ï¿½TIM3ï¿½ï¿½TIM4ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö»ï¿½ï¿½ï¿½Þ¸Äºê¶¨ï¿½å¼´
             -ï¿½ï¿½ 
   62                  ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¹ï¿½Ã´ï¿½ï¿½ï¿½ï¿½ï¿½Ä±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½STCï¿½ï¿½Ö§ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿
             -½ï¿½ë£©
   63          ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½
   64          ********************************************************************/
   65          void encoder_init()
   66          {
   67   1          //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½
   68   1                      ctimer_count_init(Left_Ecoder_Pin1);
   69   1                      //ï¿½Ò±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½
   70   1                      ctimer_count_init(Right_Ecoder_Pin1);
   71   1      }  
   72          /***************************ï¿½Ù¶È²ï¿½ï¿½ï¿½********************************
   73          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½speed_measure()
   74          ï¿½ï¿½  ï¿½Ü£ï¿½ï¿½Ù¶È²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½Í¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï
             -¿½ï¿½×°ï¿½Í³ï¿½ï¿½ï¿½Ç°ï¿½ï¿½ï¿½ï¿½ï¿½ò²»¶Ô»ï¿½
   75                  ï¿½ï¿½ï¿½Â²É¼ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä£ï¿½Ö»ï¿½ï¿½ï¿½Þ¸ï¿½* (-1)ï¿½ï¿½ï¿½Ð£
             -ï¿½ï¿½Äµï¿½ï¿½ï¿½ï¿½ï¿½Í¿ï¿½
   76                  ï¿½ï¿½ï¿½ï¿½
   77          ï¿½ï¿½  ï¿½ï¿½ï¿½ï¿½void
   78          ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½void
   79          ******************************************************************/
   80          void speed_measure()
   81          { 
   82   1                int16 temp_L, temp_R;
   83   1          temp_L = ctimer_count_read(Left_Ecoder_Pin1); // ï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½Ç°ï¿½Ù¶ï¿½
   84   1          temp_R = ctimer_count_read(Right_Ecoder_Pin1);
   85   1      
   86   1          ctimer_count_clean(Left_Ecoder_Pin1); // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
   87   1          ctimer_count_clean(Right_Ecoder_Pin1);
   88   1                
   89   1                if(Left_Ecoder_Pin2 == 1)
   90   1              left_speed = temp_L;
   91   1          else
   92   1              left_speed = (1) * temp_L;
   93   1          if(Right_Ecoder_Pin2 == 0)
   94   1              right_speed = temp_R;
   95   1          else
   96   1              right_speed = (1) * temp_R;
   97   1                      
   98   1                      last_speed = (right_speed+left_speed)/2;// ï¿½Ù¶ï¿½Æ½ï¿½ï¿½Öµ
   99   1                real_speed*=0.8;            //Ò»ï¿½×µï¿½Í¨ï¿½Ë²ï¿½ï¿½ï¿½
  100   1                real_speed+=last_speed*0.2; //Ò»ï¿½×µï¿½Í¨ï¿½Ë²ï¿½ï¿½ï¿½  left_last_speed
  101   1                      
  102   1                      left_last_speed =left_speed;
  103   1                left_real_speed*=0.8;       //Ò»ï¿½×µï¿½Í¨ï¿½Ë²ï¿½ï¿½ï¿½
  104   1                left_real_speed+=left_last_speed*0.2; //Ò»ï¿½×µï¿½Í¨ï¿½Ë²ï¿½ï¿½ï¿½
  105   1                      
  106   1                      right_last_speed =right_speed;
  107   1                right_real_speed*=0.8;        //Ò»ï¿½×µï¿½Í¨ï¿½Ë²ï¿½ï¿½ï¿½
  108   1                right_real_speed+=right_last_speed*0.2; //Ò»ï¿½×µï¿½Í¨ï¿½Ë²ï¿½ï¿½ï¿½
  109   1      }
  110          /*******************************ï¿½ï¿½ï¿½â¶¨Ê±ï¿½ò¿ª¸É»É¹Üµï¿½***********************************
  111          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  void timed_task(void)
  112          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  ï¿½ï¿½
  113          Ëµï¿½ï¿½ï¿½ï¿½  ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½É¶ï¿½Ê±ï¿½ò¿ª¸É»É¹Üµï¿½ï¿½ï¿½Îªï¿½ï¿½Ö¾Î»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¹ï¿½Õ
             -³ï¿½ï¿½ï¿½Í¼ï¿½âµ½Í£ï¿½ï¿½
  114          ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ 
  115          *************************************************************************************/
  116          void timed_task(void)
C251 COMPILER V5.60.0,  speed                                                              05/04/25  21:33:16  PAGE 3   

  117          {
  118   1              if(flag_start)
  119   1              {
  120   2                      Open_pack_time=Open_pack_time+10;
  121   2              }
  122   1              if(flag_end)
  123   1              {
  124   2                      T_inku_wait=T_inku_wait+5;
  125   2              }
  126   1              if(T_inku_J)
  127   1              {
  128   2                      T_inku_S=T_inku_S+5;
  129   2              }
  130   1      }
  131          
  132          /*****************************ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½*******************************************
  133          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½void go_motor (int16 left_PWM,int16 right_PWM)
  134          ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½  int16 left_PWM,int16 right_PWM
  135          Ëµï¿½ï¿½ï¿½ï¿½pwm_duty(PWMA_CH1P_P60, duty);
  136                ï¿½ï¿½Ø½ï¿½ï¿½ï¿½ï¿½ÓµÄµï¿½ï¿½ï¿½ß¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
             -ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ú¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Òµï¿½ï¿½
  137                ï¿½ï¿½ï¿½ï¿½Ä²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×ªï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½×ªï¿½ï¿½ï¿
             -½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  138          ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ 
  139          ********************************************************************************/
  140          #define Duty_Max  6000   //ï¿½Þ·ï¿½ï¿½ï¿½ï¿½Öµ
  141          
  142          void go_motor (int16 left_PWM,int16 right_PWM)
  143          {
  144   1        if  (MOTOR_MODE==0)
  145   1        {     
  146   2      //---------------------------------MOSï¿½ï¿½ï¿½ï¿½-----------------------------------------     
  147   2          if (left_PWM>0)                   //ï¿½ï¿½ï¿½ï¿½
  148   2          {
  149   3                       left_PWM = left_PWM<=Duty_Max ? left_PWM : Duty_Max;
  150   3           pwm_duty(Left_Z_Pin,left_PWM);
  151   3           pwm_duty(Left_F_Pin,0);                        //ï¿½ï¿½×ª
  152   3          }   
  153   2          else 
  154   2          {
  155   3           left_PWM = left_PWM>=-Duty_Max ? (-left_PWM) : Duty_Max;  
  156   3           pwm_duty(Left_Z_Pin,1);    
  157   3           pwm_duty(Left_F_Pin,left_PWM);       //ï¿½ï¿½×ª
  158   3          } 
  159   2          if (right_PWM>0)                  //ï¿½ï¿½ï¿½ï¿½
  160   2          { 
  161   3           right_PWM = right_PWM<=Duty_Max ? right_PWM : Duty_Max; 
  162   3                 pwm_duty(Right_Z_Pin,right_PWM);     
  163   3                 pwm_duty(Right_F_Pin,0);                         //ï¿½ï¿½×ª
  164   3          } 
  165   2          else 
  166   2          {
  167   3           right_PWM = right_PWM>=-Duty_Max ? (-right_PWM) : Duty_Max;  
  168   3                 pwm_duty(Right_Z_Pin,1);     
  169   3                 pwm_duty(Right_F_Pin,right_PWM); //ï¿½ï¿½×ª
  170   3          }
  171   2        }
  172   1        else
  173   1        {
  174   2      //-------------------------------------------DRVï¿½ï¿½ï¿½ï¿½-------------------------------------
  175   2         if (left_PWM>0)                     //ï¿½ï¿½ï¿½ï¿½
  176   2         {
  177   3                       left_PWM = left_PWM<=Duty_Max ? left_PWM : Duty_Max;
  178   3                       Left_DIR_Pin=0;                         
  179   3           pwm_duty(Left_PWM_Pin,left_PWM);  //ï¿½ï¿½×ª
  180   3         }    
C251 COMPILER V5.60.0,  speed                                                              05/04/25  21:33:16  PAGE 4   

  181   2         else 
  182   2         {
  183   3           left_PWM = left_PWM>=-Duty_Max ? (-left_PWM) : Duty_Max;  
  184   3           Left_DIR_Pin=1;    
  185   3           pwm_duty(Left_PWM_Pin,left_PWM);  //ï¿½ï¿½×ª
  186   3         }
  187   2         if (right_PWM>0)                    //ï¿½ï¿½ï¿½ï¿½
  188   2         {
  189   3           right_PWM = right_PWM<=Duty_Max ? right_PWM : Duty_Max;
  190   3           Right_DIR_Pin=0;                    
  191   3                 pwm_duty(Right_PWM_Pin,right_PWM);//ï¿½ï¿½×ª         
  192   3               } 
  193   2         else 
  194   2         {
  195   3           right_PWM = right_PWM>=-Duty_Max ? (-right_PWM) : Duty_Max;  
  196   3                 Right_DIR_Pin=1;
  197   3                 pwm_duty(Right_PWM_Pin,right_PWM); //ï¿½ï¿½×ª
  198   3         }
  199   2        }
  200   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       774     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        43     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       131     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
